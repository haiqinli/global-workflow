#!/bin/ksh -x

########## config.base ##########
# Common to all steps

echo "BEGIN: config.base"

# Machine environment
export machine="HERA"

# EMC parallel or NCO production
export RUN_ENVIR="emc"

# Account, queue, etc.
if [ $machine = "HERA" ]; then

    export ACCOUNT="gmtb"
    export QUEUE="batch"
    export QUEUE_ARCH="service"

elif [ $machine = "WCOSS_C" -o $machine = "WCOSS_DELL_P3" ]; then

    export ACCOUNT="GFS-DEV"
    export QUEUE="dev"
    export QUEUE_ARCH="dev_transfer"

fi

# Project to use in mass store:
HPSS_PROJECT=gmtb

# Directories relative to installation areas:
export HOMEgfs=/scratch1/BMC/gmtb/Judy.K.Henderson/dtc_aop_2019/gmtb_v16beta
export PARMgfs=$HOMEgfs/parm
export FIXgfs=$HOMEgfs/fix
export USHgfs=$HOMEgfs/ush
export UTILgfs=$HOMEgfs/util
export EXECgfs=$HOMEgfs/exec
export SCRgfs=$HOMEgfs/scripts

########################################################################

# GLOBAL static environment parameters
if [ $machine = "HERA" ]; then

    #export NWPROD="/scratch1/NCEPDEV/global/glopara/nwpara"
    export DMPDIR="/scratch1/NCEPDEV/global/glopara/dump"
    export RTMFIX=$CRTM_FIX

elif [ $machine = "WCOSS_C" ]; then

    export NWPROD="/gpfs/hps/nco/ops/nwprod"
    export DMPDIR="/gpfs/dell3/emc/global/dump"
    [[ $(hostname |cut -c 1) = l ]] && export SITE="LUNA"
    [[ $(hostname |cut -c 1) = s ]] && export SITE="SURGE"
    export RTMFIX=$CRTM_FIX

elif [ $machine = "WCOSS_DELL_P3" ]; then

    export NWPROD="/gpfs/dell1/nco/ops/nwprod"
    export DMPDIR="/gpfs/dell3/emc/global/dump"
    [[ $(hostname |cut -c 1) = m ]] && export SITE="MARS"
    [[ $(hostname |cut -c 1) = v ]] && export SITE="VENUS"
    export RTMFIX=$CRTM_FIX
fi


# Machine specific paths used everywhere
if [ $machine = "HERA" ]; then

    # USER specific paths
    export HOMEDIR="/scratch1/BMC/gmtb/NCEPDEV/global/$USER"
    export STMP="/scratch1/BMC/gmtb/NCEPDEV/stmp2/$USER"
    export PTMP="/scratch1/BMC/gmtb/NCEPDEV/stmp4/$USER"
    export NOSCRUB="$HOMEDIR"

    # Base directories for various builds
    export BASE_GIT="/scratch1/NCEPDEV/global/glopara/git"
    export BASE_SVN="/scratch1/NCEPDEV/global/glopara/svn"

elif [ $machine = "WCOSS_C" ]; then

    # USER specific paths
    export HOMEDIR="/gpfs/hps3/emc/global/noscrub/$USER"
    export STMP="/gpfs/hps2/stmp/$USER"
    export PTMP="/gpfs/hps2/ptmp/$USER"
    export NOSCRUB="/gpfs/hps3/emc/global/noscrub/$USER"

    # Base directories for various builds
    export BASE_GIT="/gpfs/hps3/emc/global/noscrub/emc.glopara/git"
    export BASE_SVN="/gpfs/hps3/emc/global/noscrub/emc.glopara/svn"

elif [ $machine = "WCOSS_DELL_P3" ]; then

    # USER specific paths
    export HOMEDIR="/gpfs/dell2/emc/modeling/noscrub/$USER"
    export STMP="/gpfs/dell3/stmp/$USER"
    export PTMP="/gpfs/dell3/ptmp/$USER"
    export NOSCRUB="/gpfs/dell2/emc/modeling/noscrub/$USER"

    # Base directories for various builds
    export BASE_GIT="/gpfs/dell2/emc/modeling/noscrub/emc.glopara/git"
    export BASE_SVN="/gpfs/dell2/emc/modeling/noscrub/emc.glopara/git"

fi

# Toggle to turn on/off GFS downstream processing.
export DO_BUFRSND="NO"               # JKH
export DO_GEMPAK="NO"
export DO_AWIPS="NO"

# NO for retrospective parallel; YES for real-time parallel
export REALTIME="NO"


####################################################
# DO NOT ADD MACHINE DEPENDENT STUFF BELOW THIS LINE
# IF YOU HAVE TO MAKE MACHINE SPECIFIC CHANGES BELOW
# FEEL FREE TO MOVE THEM ABOVE THIS LINE TO KEEP IT
# CLEAR
####################################################
# Build paths relative to $HOMEgfs
export HOMEgsi="$HOMEgfs"
export FIXgsi="$HOMEgfs/fix/fix_gsi"
export HOMEfv3gfs="$HOMEgfs/sorc/fv3gfs.fd"
export HOMEpost="$HOMEgfs"
export HOMEobsproc_prep="$BASE_GIT/obsproc/gfsv16/obsproc_prep.iss70457.netcdfhistory_new"
export HOMEobsproc_network="$BASE_GIT/obsproc/gfsv16/obsproc_global.iss71402.supportGFSv16"
export HOMEobsproc_global=$HOMEobsproc_network
export BASE_VERIF="$BASE_SVN/verif/global/tags/vsdb"

# CONVENIENT utility scripts and other environment parameters
export NCP="/bin/cp -p"
export NMV="/bin/mv"
export NLN="/bin/ln -sf"
export VERBOSE="YES"
export KEEPDATA="YES"
export CHGRP_CMD="chgrp rstprod"
export NEMSIOGET="$HOMEgfs/exec/nemsio_get"

# Machine environment, jobs, and other utility scripts
export BASE_ENV="$HOMEgfs/env"
export BASE_JOB="$HOMEgfs/jobs/rocoto"

# EXPERIMENT specific environment parameters
export SDATE=2019101700
export EDATE=2020030600
export assim_freq=6
export PSLOT="v16test"
export EXPDIR="/scratch1/BMC/gmtb/Judy.K.Henderson/dtc_aop_2019/gmtb_v16beta/FV3GFSwfm/$PSLOT"
export ROTDIR="/scratch1/BMC/gmtb/Judy.K.Henderson/dtc_aop_2019/gmtb_v16beta/FV3GFSrun/$PSLOT"
export ROTDIR_DUMP="YES"                #Note: A value of "NO" does not currently work
export DUMP_SUFFIX=""
export RUNDIR="$STMP/RUNDIRS/$PSLOT"
export DATAROOT="$RUNDIR/$CDATE/$CDUMP"
export ARCDIR="$NOSCRUB/archive/$PSLOT"
export ICSDIR="/scratch1/BMC/gmtb/Judy.K.Henderson/dtc_aop_2019/gmtb_v16beta/FV3GFSrun/FV3ICS"
export ATARDIR="/BMC/$HPSS_PROJECT/2year/$PSLOT"

# Commonly defined parameters in JJOBS
export envir=${envir:-"prod"}
export NET="gfs"
export RUN=${RUN:-${CDUMP:-"gfs"}}
export jlogfile="${EXPDIR}/logs/jlogfile"
export ERRSCRIPT=${ERRSCRIPT:-'eval [[ $err = 0 ]]'}
export LOGSCRIPT=${LOGSCRIPT:-""}
#export ERRSCRIPT=${ERRSCRIPT:-"err_chk"}
#export LOGSCRIPT=${LOGSCRIPT:-"startmsg"}
export REDOUT="1>"
export REDERR="2>"

export SENDECF="NO"
export SENDCOM="NO"
export SENDDBN="NO"
export SENDSDM="NO"

# Resolution specific parameters
export LEVS=65          ## JKH
export CASE="C768"
export CASE_ENKF="@CASEENS@"

# Surface cycle update frequency
if [[ "$CDUMP" == "gdas" ]] ; then
   export FHCYC=1
   export FTSFS=10
elif [[ "$CDUMP" == "gfs" ]] ; then
   export FHCYC=24
fi

# Output frequency of the forecast model (for cycling)
export FHMIN=0
export FHMAX=9
export FHOUT=3

# GFS cycle info
export gfs_cyc=1 # 0: no GFS cycle, 1: 00Z only, 2: 00Z and 12Z only, 4: all 4 cycles.

# GFS output and frequency
export FHMIN_GFS=0

export FHMAX_GFS_00=120
export FHMAX_GFS_06=120
export FHMAX_GFS_12=120
export FHMAX_GFS_18=120
export FHMAX_GFS=$(eval echo \${FHMAX_GFS_$cyc})

export FHOUT_GFS=6
export FHMAX_HF_GFS=0
export FHOUT_HF_GFS=1

# I/O QUILTING, true--use Write Component; false--use GFDL FMS
# if quilting=true, choose OUTPUT_GRID as cubed_sphere_grid in netcdf or gaussian_grid
# if gaussian_grid, set OUTPUT_FILE for nemsio or netcdf
# WRITE_DOPOST=true, use inline POST
export QUILTING=".true."
export OUTPUT_GRID="gaussian_grid"
export OUTPUT_FILE="nemsio"                  ## JKH
export WRITE_DOPOST=".false."                ## JKH

# suffix options depending on file format
if [ $OUTPUT_FILE = "netcdf" ]; then
    export SUFFIX=".nc"
    export NEMSIO_IN=".false."
    export NETCDF_IN=".true."
else
    export SUFFIX=".nemsio"
    export NEMSIO_IN=".true."
    export NETCDF_IN=".false."
fi

# IAU related parameters
export DOIAU="YES"        # Enable 4DIAU for control with 3 increments
export IAUFHRS="3,6,9"
export IAU_DELTHRS=6
export IAU_OFFSET=6
export DOIAU_ENKF="YES"   # Enable 4DIAU for EnKF ensemble
export IAUFHRS_ENKF="3,6,9"
if [[ "$SDATE" = "$CDATE" ]]; then export IAU_OFFSET=0 ;fi

# Use Jacobians in eupd and thereby remove need to run eomg
export lobsdiag_forenkf=".true."


# run GLDAS to spin up land ICs
export DO_GLDAS=YES
export gldas_cyc=00


# Microphysics Options: 99-ZhaoCarr, 8-Thompson; 6-WSM6, 10-MG, 11-GFDL
export imp_physics=11

# Shared parameters
# Hybrid related
export DOHYBVAR="YES"
export NMEM_ENKF=@NMEM_ENKF@
export SMOOTH_ENKF="NO"
export l4densvar=".true."
export lwrite4danl=".true."

# EnKF output frequency
if [ $DOHYBVAR = "YES" ]; then
    export FHMIN_ENKF=3
    export FHMAX_ENKF=9
    if [ $l4densvar = ".true." ]; then
        export FHOUT=1
        export FHOUT_ENKF=1
    else
        export FHOUT_ENKF=3
    fi
fi

# turned on nsst in anal and/or fcst steps, and turn off rtgsst
export DONST="YES"
if [ $DONST = "YES" ]; then export FNTSFA="        "; fi

# The switch to apply SST elevation correction or not
export nst_anl=.true.

# Analysis increments to zero in CALCINCEXEC
export INCREMENTS_TO_ZERO="'liq_wat_inc','icmr_inc'"

if [ $OUTPUT_FILE = "nemsio" ]; then
    export DO_CALC_INCREMENT="YES"
    export DO_CALC_ANALYSIS="NO"
fi

# Stratospheric increments to zero
export INCVARS_ZERO_STRAT="'sphum_inc','liq_wat_inc','icmr_inc'"
export INCVARS_EFOLD="5"

# Swith to generate netcdf or binary diagnostic files.  If not specified,
# script default to binary diagnostic files.   Set diagnostic file
# variables here since used in both DA and vrfy jobs
export netcdf_diag=".true."
export binary_diag=".false."


# Archiving options
export HPSSARCH="YES"         # save data to HPSS archive
export ARCH_CYC=00           # Archive data at this cycle for warm_start capability
export ARCH_WARMICFREQ=4     # Archive frequency in days for warm_start capability
export ARCH_FCSTICFREQ=1     # Archive frequency in days for gdas and gfs forecast-only capability

echo "END: config.base"
