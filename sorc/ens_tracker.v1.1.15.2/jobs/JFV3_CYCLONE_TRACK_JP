#!/bin/sh 
date
export PS4=' $SECONDS + '
set -x

####################################
# obtain unique process id (pid) and make temp directory
####################################
export jobid=${jobid:-$job.o$$}
export DATA=${DATA:-${DATAROOT:?}/${jobid}}
mkdir -p $DATA
cd $DATA
export cycle=t${cyc}z

####################################
# File To Log Msgs
####################################
mkdir -p ${COMROOT}/logs/jlogfiles
export jlogfile=${jlogfile:-${COMROOT}/logs/jlogfiles/jlogfile.${jobid}}

####################################
# Specify NET and RUN Name and model
####################################
export NET=${NET:-ens_tracker}
export RUN=${RUN:-gfs}

####################################
# Determine Job Output Name on System
####################################
export pgmout="OUTPUT.$$"
export pgmerr=errfile

####################################
# SENDECF  - Flag Events on ecFLOW
# SENDCOM  - Copy Files From TMPDIR to $COMOUT
# SENDDBN  - Issue DBNet Client Calls
####################################
export SENDECF=${SENDECF:-NO}
export SENDCOM=${SENDCOM:-YES}
export SENDDBN=${SENDDBN:-NO}

####################################
# Specify Execution Areas
####################################
export HOMEens_tracker=${HOMEens_tracker:-${NWROOT:?}/ens_tracker.${ens_tracker_ver}}
export EXECens_tracker=${EXECens_tracker:-$HOMEens_tracker/exec}
export FIXens_tracker=${FIXens_tracker:-$HOMEens_tracker/fix}
export USHens_tracker=${USHens_tracker:-$HOMEens_tracker/ush}

##############################
# Run setpdy and initialize PDY variables
##############################
#setpdy.sh
#. PDY
export PDY=20200612

##############################################
# Define COM directories
##############################################
#mac=`echo ${SITE}`
#mac2=$(hostname | cut -c1-2)

if [[ -d /dcom ]] ; then
  # We are on NOAA Tide or Gyre
  export COMINgfs=${COMINgfs:-$(compath.py gfs/prod/gfs.$PDY)}
  export COMINsyn=${COMINsyn:-$(compath.py arch/prod/syndat)}

elif [[ -d /gpfs/hps && -e /etc/SuSE-release ]] ; then
  # We are on NOAA Luna or Surge
  export COMINgfs=${COMINgfs:-$(compath.py gfs/prod/gfs.$PDY)}
  export COMINsyn=${COMINsyn:-$(compath.py arch/prod/syndat)}

elif [[ -L /usrx && "$( readlink /usrx 2> /dev/null )" =~ dell ]] ; then
  # We are on NOAA Mars or Venus
  export COMINgfs=${COMINgfs:-$(compath.py gfs/prod/gfs.$PDY)}
  export COMINsyn=${COMINsyn:-$(compath.py arch/prod/syndat)}

elif [[ -d /scratch2 ]] ; then
  # We are on NOAA Hera
  export COMINgfs=${COMINgfs:-${COMROOTp1}/gfs/prod/gfs.${PDY}}
#  export COMINgfs=/scratch2/NCEPDEV/ensemble/Jiayi.Peng/noscrub/data_4_gfs
#  export COMINsyn=${COMINsyn:-${COMROOTp1}/arch/prod/syndat}
  export COMINsyn=/scratch1/NCEPDEV/hwrf/noscrub/input/SYNDAT

elif [[ -d /work ]] ; then
  # We are on MSU Orion
#  export COMINgfs=${COMINgfs:-${COMROOTp1}/gfs/prod/gfs.${PDY}}
  export COMINgfs=/work/noaa/stmp/Jiayi.Peng/data_4_gfs
#  export COMINsyn=${COMINsyn:-${COMROOTp1}/arch/prod/syndat}
#  export COMINsyn=/work/noaa/global/kfriedma/glopara/git/tracker/syndat
  export COMINsyn=/work/noaa/global/Jiayi.Peng/syndat

elif [[ -d /lfs3 ]] ; then
  # We are on NOAA Jet
#  export COMINgfs=${COMINgfs:-${COMROOTp1}/gfs/prod/gfs.${PDY}}
#  export COMINsyn=${COMINsyn:-${COMROOTp1}/arch/prod/syndat}
#  export COMINgfs=${COMINgfs:-/mnt/lfs3/projects/hwrfv3/Jiayi.Peng/data/gfs.${PDY}}
  export COMINsyn=${COMINsyn:-/mnt/lfs4/HFIP/hwrf-data/hwrf-input/SYNDAT}
  export COMINgfs=${COMINgfs:-/mnt/lfs4/HFIP/hwrfv3/Jiayi.Peng/data/gfs.20200612}
else
  echo Job failed: unknown platform 1>&2
  err_exit "FAILED ${jobid} - ERROR IN unknown platform - ABNORMAL EXIT"
fi

export COMROOTp1=${COMROOT}
export COMOUT=${COMOUT:-${COMROOT:?}/${NET}/${envir}/${RUN}.${PDY}/${cyc}/tctrack}
export COMOUThur=${COMOUThur:-${COMROOTp1:?}/hur/${envir}/global}
export COMOUTatcf=${COMOUTatcf:-${COMROOTp1:?}/nhc/${envir}/atcf}
mkdir -m 775 -p $COMOUT $COMOUThur $COMOUTatcf

msg="HAS BEGUN on `hostname`"
postmsg "$jlogfile" "$msg"

env

#############################################################
# Execute the script
export cmodel=gfs
export loopnum=1
export ymdh=${PDY}${cyc}

export gfsdir=${COMINgfs}/${cyc}
#export gfsdir=${COMINgfs}

export pert="p01"
pertdir=${DATA}/${cmodel}/${pert}
mkdir -p $pertdir

#-----------input data checking -----------------
#${USHens_tracker}/data_check.sh 
${USHens_tracker}/data_check_gfs.sh
## exit code 6 = missing data of opportunity
if [ $? -eq 6 ]; then exit; fi
#------------------------------------------------

outfile=${pertdir}/trkr.${cmodel}.${pert}.${ymdh}.out

if [[ -d /dcom ]] ; then
  # We are on NOAA Tide or Gyre
  machine=wcoss
  ${USHens_tracker}/extrkr_gfs.sh ${loopnum} ${cmodel} ${ymdh} ${pert} ${pertdir} #2>&1 >${outfile}

elif [[ -d /gpfs/hps && -e /etc/SuSE-release ]] ; then
  # We are on NOAA Luna or Surge
  machine=cray
  ${APRUNTRACK} ${USHens_tracker}/extrkr_gfs.sh ${loopnum} ${cmodel} ${ymdh} ${pert} ${pertdir} #2>&1 >${outfile}

elif [[ -L /usrx && "$( readlink /usrx 2> /dev/null )" =~ dell ]] ; then
  # We are on NOAA Mars or Venus
  machine=dell
  ${USHens_tracker}/extrkr_gfs.sh ${loopnum} ${cmodel} ${ymdh} ${pert} ${pertdir} #2>&1 >${outfile}

elif [[ -d /scratch2 ]] ; then
  # We are on NOAA Hera
  machine=hera
  ${USHens_tracker}/extrkr_gfs.sh ${loopnum} ${cmodel} ${ymdh} ${pert} ${pertdir} #2>&1 >${outfile}

elif [[ -d /work ]] ; then
  # We are on MSU Orion 
  machine=orion
  ${USHens_tracker}/extrkr_gfs.sh ${loopnum} ${cmodel} ${ymdh} ${pert} ${pertdir} #2>&1 >${outfile}

elif [[ -d /lfs3 ]] ; then
  # We are on NOAA Jet
  machine=jet
  ${USHens_tracker}/extrkr_gfs.sh ${loopnum} ${cmodel} ${ymdh} ${pert} ${pertdir} #2>&1 >${outfile}

else
  export machine=unknown
  echo Job failed: unknown platform 1>&2
  err_exit "FAILED ${jobid} - ERROR IN unknown platform - ABNORMAL EXIT"

fi
export err=$?; err_chk

#if [ "$SENDCOM" = 'YES' ]; then
#  cat ${pertdir}/trak.gfso.atcfunix.${PDY}${cyc} | \
#      sed s:GFSO:AVNO:g \
#    > ${COMOUT}/avn.t${cyc}z.cyclone.trackatcfunix
#fi

#############################################################

msg="JOB COMPLETED NORMALLY"
postmsg "$jlogfile" "$msg"

##############################
# Remove the Temporary working directory
##############################
if [[ $KEEPDATA != "YES" ]]; then
  rm -rf $DATA
fi

date
