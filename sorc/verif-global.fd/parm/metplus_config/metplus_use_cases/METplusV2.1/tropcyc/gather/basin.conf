[dir]
# Input and output data directories
TC_STAT_INPUT_DIR = {OUTPUT_BASE}/tropcyc/metplus_output/make_met_data/tc_pairs
TC_STAT_OUTPUT_DIR = {OUTPUT_BASE}/tropcyc/metplus_output/gather/tc_stat/{ENV[basin]}
# Location of configuration files used by MET applications
CONFIG_DIR = {ENV[PARMverif_global]}/metplus_config/metplus_use_cases/METplusV{ENV[METplus_version]}/tropcyc/met_config/metV{ENV[MET_version]}
# Log and temporary directories
LOG_DIR = {OUTPUT_BASE}/tropcyc/metplus_output/logs
TMP_DIR = /tmp
# Location of MET bin directory
MET_BIN = {MET_INSTALL_DIR}/bin

[config]
LOG_METPLUS = {LOG_DIR}/master_metplus_tropcyc_gatherby_tcstat_for{ENV[basin]}_runon{CLOCK_TIME}.log
METPLUS_CONF = {OUTPUT_BASE}/tropcyc/metplus_output/confs/master_metplus_tropcyc_gatherby_tcstat_for{ENV[basin]}_runon{CLOCK_TIME}.conf

# Date information
# The init time begin and end times, increment, and last init hour.
#INIT_BEG = {ENV[START_DATE]}
#INIT_END = {ENV[END_DATE]}
#INIT_TIME_FMT = %Y%m%d%H
# This is the step-size. Increment in seconds from the begin time to the end time
# 6 hours = 21600 seconds
#INIT_INCREMENT = 21600
# This is the last hour in your initialization time that you want to include in your time window
INIT_HOUR_END =
# A list of times to include, in format YYYYMMDD_hh
INIT_INCLUDE =
# A list of times to exclude, in format YYYYMMDD_hh
INIT_EXCLUDE =
# Specify model valid time window in format YYYYMM[DD[_hh]].  Only tracks that fall within the valid time window will
# be used.
VALID_BEG =
VALID_END =

# Options are times, processes
# times = run all items in the PROCESS_LIST for a single initialization
# time, then repeat until all times have been evaluated.
# processes = run each item in the PROCESS_LIST for all times
# specified, then repeat for the next item in the PROCESS_LIST.
LOOP_ORDER = processes
# List of applications to run
PROCESS_LIST = TcStat

# For TcStat
# Define the job filter via TC_STAT_JOBS_LIST.
# Separate each option and value with whitespace, and each job with a whitespace.
# No whitespace within arithmetic expressions or lists of items
# (e.g. -by AMSLP,AMODEL,LEAD -column '(AMAX_WIND-BMAX_WIND)')
# Enclose your arithmetic expressions with '' and separate each job
# by whitespace:
#  -job filter -dump_row /path/to,  -job summary -line_type TCMPR  -column 'ABS(AMAX_WIND-BMAX_WIND)' -out {OUTPUT_BASE}/tc_stat/file.tcst
#TC_STAT_RUN_VIA = CONFIG
#TC_STAT_JOBS_LIST = -job filter -dump_row {TC_STAT_OUTPUT_DIR}/filtered_level_data.tcst
TC_STAT_RUN_VIA = CLI
TC_STAT_CMD_LINE_JOB =  -out {TC_STAT_OUTPUT_DIR}/summary.tcst -job summary -line_type TCMPR -column TI -by LEAD,AMODEL -column_str LEVEL TD,TS,TY,TC,HU,ST -init_hour {ENV[init_hour_list]} -valid_hour {ENV[valid_hour_list]} -lead {ENV[fhr_list]} -basin {ENV[basin]} -event_equal TRUE -dump_row {TC_STAT_OUTPUT_DIR}/dump_row.tcst
# Stratify by these columns:
TC_STAT_AMODEL =
TC_STAT_BMODEL =
TC_STAT_DESC =
TC_STAT_STORM_ID =
TC_STAT_BASIN =
TC_STAT_CYCLONE =
TC_STAT_STORM_NAME =
# Stratify by init times via a comma-separate list of init times to
# include or exclude.  Time format defined as YYYYMMDD_HH or YYYYMMDD_HHmmss
TC_STAT_INIT_BEG =
TC_STAT_INIT_END =
TC_STAT_INIT_INCLUDE =
TC_STAT_INIT_EXCLUDE =
TC_STAT_INIT_HOUR =
# Stratify by valid times via a comma-separate list of valid times to
# include or exclude.  Time format defined as YYYYMMDD_HH or YYYYMMDD_HHmmss
TC_STAT_VALID_BEG =
TC_STAT_VALID_END =
TC_STAT_VALID_INCLUDE =
TC_STAT_VALID_EXCLUDE =
TC_STAT_VALID_HOUR =
# Stratify by the lead time via comma-separated list of
# times in format HH[MMSS]
TC_STAT_LEAD =
TC_STAT_LEAD_REQ =
# Stratify by mask
TC_STAT_INIT_MASK =
TC_STAT_VALID_MASK =
# Stratify over the watch_warn column in the tcst file.  Setting this to
# 'ALL' will match HUWARN, HUWATCH, TSWARN, TSWATCH
TC_STAT_TRACK_WATCH_WARN =
# Stratify by applying thresholds to numeric data columns.  Specify with
# comma-separated list of column names and thresholds to be applied.
# The length of TC_STAT_COLUMN_THRESH_NAME should be the same as
# TC_STAT_COLUMN_THRESH_VAL.
TC_STAT_COLUMN_THRESH_NAME =
TC_STAT_COLUMN_THRESH_VAL =
# Stratify by a list of comma-separated columns names and values corresponding
# to non-numeric data columns of the values of interest.
TC_STAT_COLUMN_STR_NAME =
TC_STAT_COLUMN_STR_VAL =
# Stratify by applying thresholds to numeric data columns only when lead=0.
# If lead=0 and the value does not meet the threshold, discard the entire
# track.  The length of TC_STAT_INIT_THRESH_NAME must equal the length of
# TC_STAT_INIT_THRESH_VAL.
TC_STAT_INIT_THRESH_NAME =
TC_STAT_INIT_THRESH_VAL =
# Stratify by applying thresholds to numeric data columns only when lead = 0.
# If lead = 0 but the value doesn't meet the threshold, discard the entire
# track.
TC_STAT_INIT_STR_NAME =
TC_STAT_INIT_STR_VAL = 
# Excludes any points where distance to land is <=0. When set to TRUE, once land
# is encountered, the remainder of the forecast track is NOT used for the
# verification, even if the track moves back over water.
TC_STAT_WATER_ONLY =
# TRUE or FALSE.  To specify whether only those track points occurring near
# landfall should be retained. Landfall is the last bmodel track point before
# the distance to land switches from water to land.
TC_STAT_LANDFALL =
# Define the landfall retention window, which is defined as the hours offset
# from the time of landfall. Format is in HH[MMSS]. Default TC_STAT_LANDFALL_BEG
# is set to -24, and TC_STAT_LANDFALL_END is set to 00
TC_STAT_LANDFALL_BEG = -24
TC_STAT_LANDFALL_END = 00
# Specify whether only those track points common to both the ADECK and BDECK
# tracks should be written out
TC_STAT_MATCH_POINTS = true

# OVERWRITE OPTIONS
# Don't overwrite filter files if they already exist.
# Set to no if you do NOT want to override existing files
# Set to yes if you do want to override existing files
TRACK_DATA_MOD_FORCE_OVERWRITE = no
TC_PAIRS_FORCE_OVERWRITE = no

MISSING_VAL_TO_REPLACE = -9999
MISSING_VAL = -9999

TC_STAT_CONFIG_FILE = {CONFIG_DIR}/TCStatConfig
DLAND_FILE = {MET_INSTALL_DIR}/share/met/tc_data/dland_global_tenth_degree.nc
